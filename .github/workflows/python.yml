name: Python

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: "x64"

      - name: Lint with RustFmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: fmt
          args: --manifest-path ./python/Cargo.toml -- --check

      - name: Lint with Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path ./python/Cargo.toml --all-targets --all-features -- -D warnings

      - name: Build Wheel & Run Tests
        if: matrix.os != 'windows-latest'
        working-directory: ./python
        run: |         
          python -m venv .env
          source .env/bin/activate
          pip install -U pip
          pip install -U maturin
          pip install pytest setuptools_rust
          maturin develop --release
          pytest pytest/*
  
      - name: Build Wheel & Run Tests
        if: matrix.os == 'windows-latest'
        working-directory: ./python
        run: |         
          python -m venv .env
          .env/Scripts/Activate.ps1
          pip install -U pip
          pip install -U maturin
          pip install pytest setuptools_rust
          maturin develop --release
          pytest pytest/*
